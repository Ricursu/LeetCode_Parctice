##### 解题思路：

###### 1、动态规划

​	对于任意子串，当它向外扩展时，只需要判断扩展的两个字符是否相等即可，也就是P(i,j) = P(i + 1, j - 1) && (S<sub>i</sub> == S<sub>j</sub>)。

​	上面的规律是基于子串长度大于2时的结论。当子串长度为1时，子串必然是一个回文串，即P(i, i) = true，而当子串长度为2时，只需要判断两个字符是否相等即可，即P(i, i+1) = (S<sub>i</sub> == S<sub>i + 1</sub>)。

###### 2、中心扩展

​	**所有的状态在转移的时候的可能性都是唯一的**。也就是说，我们可以从每一种边界情况开始「扩展」，也可以得出所有的状态对应的答案。

​	边界情况即为子串长度为 1 或 2 的情况。我们枚举每一种边界情况，并从对应的子串开始不断地向两边扩展。如果两边的字母相同，我们就可以继续扩展，例如从 P(i+1,j-1)P(i+1,j−1) 扩展到 P(i,j)P(i,j)；如果两边的字母不同，我们就可以停止扩展，因为在这之后的子串都不能是回文串了。

​	方法二的本质即为：我们枚举所有的「回文中心」并尝试「扩展」，直到无法扩展为止，此时的回文串长度即为此「回文中心」下的最长回文串长度。我们对所有的长度求出最大值，即可得到最终的答案。
